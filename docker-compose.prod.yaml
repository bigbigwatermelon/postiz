version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: postiz-postgres
    environment:
      POSTGRES_DB: postiz
      POSTGRES_USER: postiz
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postiz_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postiz-network
    restart: unless-stopped
    ports:
      - "5432:5432"

  # Redis
  redis:
    image: redis:7-alpine
    container_name: postiz-redis
    volumes:
      - redis_data:/data
    networks:
      - postiz-network
    restart: unless-stopped
    ports:
      - "6379:6379"

  # 后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: postiz-backend
    environment:
      - SERVICE_TYPE=backend
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://postiz:${DB_PASSWORD:-postiz_password_2024}@postgres:5432/postiz
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here-make-it-very-long}
      - FRONTEND_URL=http://localhost:4200
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:3000
      - BACKEND_INTERNAL_URL=http://localhost:3000
      - STORAGE_PROVIDER=local
      - IS_GENERAL=true
      - API_LIMIT=30
    depends_on:
      - postgres
      - redis
    networks:
      - postiz-network
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads

  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: postiz-frontend
    environment:
      - SERVICE_TYPE=frontend
      - NODE_ENV=production
      - PORT=4200
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:3000
    depends_on:
      - backend
    networks:
      - postiz-network
    restart: unless-stopped
    ports:
      - "4200:4200"

  # Worker 服务
  workers:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: postiz-workers
    environment:
      - SERVICE_TYPE=workers
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postiz:${DB_PASSWORD:-postiz_password_2024}@postgres:5432/postiz
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here-make-it-very-long}
      - IS_GENERAL=true
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - postiz-network
    restart: unless-stopped

  # Cron 服务
  cron:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: postiz-cron
    environment:
      - SERVICE_TYPE=cron
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postiz:${DB_PASSWORD:-postiz_password_2024}@postgres:5432/postiz
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here-make-it-very-long}
      - IS_GENERAL=true
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - postiz-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  postiz-network:
    driver: bridge 